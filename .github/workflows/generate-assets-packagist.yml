name: Build and Publish Plugin

on:
  workflow_dispatch:  # Manual trigger from GitHub UI
  push:
    tags:
      - 'v*'  # This will trigger the workflow on tags like v1.0.1, v1.0.2, etc.

jobs:
  generate-assets-and-commit-them:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITACTIONS_TOKEN }}  # Authenticate with the token

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'  # Adjust to your required Node.js version

      - name: Install dependencies and generate assets
        run: |
          sudo apt-get update
          sudo apt-get install -y make  # Install make utility if it's not available by default
          make init skip-composer  # Run your custom Makefile command

      - name: Print current directory and list assets
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of the repository:"
          ls -l assets/
          echo "Contents of assets/dist folder:"
          ls -lR assets/dist/

      - name: Upload dist folder as artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-folder
          path: assets/dist  # Upload the dist folder for the next job


  create-packagist-release:
    runs-on: ubuntu-latest
    needs: generate-assets-and-commit-them  # This job depends on the generate-assets-and-commit-them job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download dist folder artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-folder

      - name: Create a release on Packagist
        run: |
          
          echo "Contents of the repository:"
          ls -l assets/
          
          # Packagist API token
          PACKAGIST_TOKEN="${{ secrets.PACKAGIST_TOKEN }}"  # Store your token in GitHub Secrets
          
          # Create a release tag from the Git tag name
          RELEASE_TAG="${GITHUB_REF#refs/tags/}"
          
          # Create a release version and associate it with the dist folder
          curl -u "${PACKAGIST_TOKEN}:" -X POST -F "file=@assets/dist/*" \
            -F "package[version]=$RELEASE_TAG" \
            -F "repository=https://github.com/puyaalexxx/devhunters-fw" \
            https://packagist.org/api/submit
        env:
          PACKAGIST_TOKEN: ${{ secrets.PACKAGIST_TOKEN }}  # Access the secret from GitHub
