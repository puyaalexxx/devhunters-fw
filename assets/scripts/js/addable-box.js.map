{"version":3,"file":"scripts/js/addable-box.js","mappings":"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","sources":["webpack:///./assets/scripts/ts/modules/extensions/options/groups/addable-box.ts"],"sourcesContent":["import jQuery from \"jquery\";\n\n(function($: JQueryStatic): void {\n    \"use strict\";\n\n    class AddableBox {\n        //addable box reference\n        private $_addable_box;\n\n        constructor($addable_box: JQuery<HTMLElement>) {\n            //tabs reference\n            this.$_addable_box = $addable_box;\n\n            //init accordion\n            this._initAddableBox();\n        }\n\n        /**\n         * init addable box\n         *\n         * @return void\n         */\n        private _initAddableBox(): void {\n            //add new box item to the addable box\n            this._addBoxItem();\n\n            //remove box item\n            this._removeBoxItem();\n\n            //open/close box items on click\n            this._openCloseBoxItem();\n\n            //change box item title when the input title is changed\n            this._changeBoxTitleOnKeyUp();\n\n            //make box items sortable\n            this._enableSortableBoxes();\n        }\n\n        /**\n         * add new box item to the addable box\n         *\n         * @return void\n         */\n        private _addBoxItem() {\n            //this class reference\n            const $thisClass = this;\n\n            this.$_addable_box.on(\"click\", \".dht-addable-box-repeater .dht-add-box-item\", function(e) {\n                e.preventDefault();\n\n                const $add_button = $(this);\n\n                //parent items\n                const $box_items = $add_button.siblings(\".dht-addable-box-items\");\n\n                if ($thisClass._maxBoxItems($box_items)) return;\n\n                //disable add box item button\n                $add_button.addClass(\"dht-btn-disabled\");\n\n                //clone the box item\n                const $prev_box_item = $box_items.children(\":last\");\n                let $box_item = $prev_box_item.clone().attr(\"data-box-item-number\", +$prev_box_item.attr(\"data-box-item-number\")! + 1);\n\n                //box item content reference\n                const $box_content_area = $box_item.children(\".dht-addable-box-content\");\n\n                //if box item opened, close it\n                const box_item_title = $box_item.children(\".dht-addable-box-title\");\n                box_item_title.removeClass(\"dht-addable-box-active\").children(\".dht-addable-box-arrow\").removeClass(\"dht-addable-box-icon-change\");\n                $box_content_area.empty().hide();\n\n                //clear box title values\n                const $box_title_text = box_item_title.children(\".dht-addable-box-title-text\");\n                $box_title_text.text($box_title_text.attr(\"data-default-title\")!);\n\n                //add box items and load their options\n                $thisClass._ajaxLoadOptions($box_items, $add_button, $box_item, $box_content_area, box_item_title);\n            });\n        }\n\n        /**\n         * remove box item\n         *\n         * @return void\n         */\n        private _removeBoxItem() {\n            this.$_addable_box.on(\"click\", \".dht-addable-box-repeater .dht-btn-remove-box-item\", function(e) {\n                e.preventDefault();\n\n                const $this = $(this);\n                const $box_item = $this.parents(\".dht-addable-box-item\");\n                const $main_parent = $box_item.parents(\".dht-addable-box-repeater\");\n\n                if ($main_parent.children(\".dht-addable-box-items\").children(\".dht-addable-box-item\").length === 1) {\n                    confirm($main_parent.children(\".dht-box-remove-text\").text());\n\n                    return;\n                }\n\n                $box_item.remove();\n\n                return false;\n            });\n        }\n\n        /**\n         * open/close box items on click\n         *\n         * @return void\n         */\n        private _openCloseBoxItem() {\n            //this class reference\n            const $thisClass = this;\n\n            this.$_addable_box.on(\"click\", \".dht-addable-box .dht-addable-box-title\", function(e) {\n                e.preventDefault();\n\n                const $current_box_title = $(this);\n\n                if ($current_box_title.hasClass(\"dht-addable-box-active\")) return;\n\n                const $current_box_item = $current_box_title.parent(\".dht-addable-box-item\");\n\n                $thisClass._boxItemsManipulations($current_box_item, $current_box_title);\n            });\n        }\n\n        /**\n         * change box item title when the input title is changed\n         *\n         * @return void\n         */\n        private _changeBoxTitleOnKeyUp() {\n            this.$_addable_box.on(\"keyup\", \".dht-addable-box-repeater .dht-addable-box-item .dht-box-title\", function(e) {\n                const value = $(this).val();\n\n                $(this).parents(\".dht-addable-box-content\").siblings(\".dht-addable-box-title\").children(\".dht-addable-box-title-text\").text(value);\n            });\n        }\n\n        /**\n         * make box items sortable\n         *\n         * @return void\n         */\n        private _enableSortableBoxes() {\n            if (this.$_addable_box.hasClass(\"dht-field-child-addable-box-sortable\")) {\n                this.$_addable_box.children(\".dht-addable-box-repeater\").children(\".dht-addable-box-items\").sortable({\n                    containment: \"parent\",\n                    forcePlaceholderSize: true,\n                    handle: \".dht-addable-box-title\", // Selector for the handle element\n                    placeholder: \"sortable-placeholder\", // Optional: Adds a placeholder during sorting\n                });\n            }\n        }\n\n        /**\n         * ajax function to add box items and load their options\n         *\n         * @return void\n         */\n        private _ajaxLoadOptions(\n            $box_items: JQuery<HTMLElement>,\n            $add_button: JQuery<HTMLElement>,\n            $box_item: JQuery<HTMLElement>,\n            $box_content_area: JQuery<HTMLElement>,\n            box_item_title: JQuery<HTMLElement>,\n        ) {\n            //this class reference\n            const $thisClass = this;\n\n            //load box options inside\n            $.ajax({\n                // @ts-ignore\n                url: dht_framework_ajax_info.ajax_url,\n                type: \"POST\",\n                dataType: \"json\",\n                data: {\n                    action: \"getBoxOptions\", // The name of your AJAX action\n                    data: {\n                        group: $add_button.siblings(\".dht-box-item-options\").val(),\n                        box_number: $box_item.attr(\"data-box-item-number\"),\n                    },\n                },\n                beforeSend: function() {\n                    //show loading spinner\n                    $add_button.siblings(\".spinner\").css(\"visibility\", \"visible\");\n                },\n                success: function(response) {\n                    if (response.success) {\n                        //add the cloned box\n                        $box_items.append($box_item);\n\n                        //append HTML content of the options to the box\n                        $box_content_area.append(response.data);\n\n                        // Initialize options so they could work as expected\n                        setTimeout(function() {\n                            $thisClass._reinitializeOptions($box_content_area);\n                        }, 100);\n\n                        $thisClass._boxItemsManipulations($box_item, box_item_title);\n                    } else {\n                        console.error(\"Ajax Response\", response);\n                    }\n                },\n                error: function(error) {\n                    console.error(\"AJAX error:\", error);\n                },\n                complete: function() {\n                    //hide loading spinner\n                    $add_button.siblings(\".spinner\").css(\"visibility\", \"hidden\");\n\n                    //enable add box item button back\n                    $add_button.removeClass(\"dht-btn-disabled\");\n                },\n            });\n        }\n\n        /**\n         * limit adding more box items than set\n         *\n         * @return void\n         */\n        private _maxBoxItems($box_items: JQuery<HTMLElement>) {\n            //max box items number\n            if (+$box_items.attr(\"data-max-box-items\")! >= $box_items.length) {\n                confirm($box_items.siblings(\".dht-max-box-items\").text());\n\n                return true;\n            }\n\n            return false;\n        }\n\n        /**\n         * open close the box item\n         *\n         * @return void\n         */\n        private _boxItemsManipulations($box_item: JQuery<HTMLElement>, $current_box_title: JQuery<HTMLElement>) {\n            //get other box items title references\n            const $box_items = $box_item.siblings(\".dht-addable-box-item\");\n            const $box_title = $box_items.children(\".dht-addable-box-title\");\n\n            //remove active class from other box items\n            $box_title.removeClass(\"dht-addable-box-active\");\n            $box_title.children(\".dht-addable-box-arrow\").removeClass(\"dht-addable-box-icon-change\");\n            $box_items.children(\".dht-addable-box-content\").slideUp(400);\n\n            //add active class and change the icon\n            $current_box_title.toggleClass(\"dht-addable-box-active\");\n            $current_box_title.next().slideToggle();\n            $current_box_title.children(\".dht-addable-box-arrow\").toggleClass(\"dht-addable-box-icon-change\");\n        }\n\n        /**\n         * reinitialize options loaded via ajax\n         *\n         * @return void\n         */\n        private _reinitializeOptions($content: JQuery<HTMLElement>) {\n            // Trigger custom ajax events based on the presence of specific elements\n            {\n                //if toggle option exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-toggle\").length) {\n                    $(document).trigger(\"dht_toggleAjaxComplete\");\n                }\n                //if colorpicker exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-colorpicker\").length || $content.find(\".dht-field-child-borders\").length) {\n                    $(document).trigger(\"dht_colorPickerAjaxComplete\");\n                }\n                //if Ace editor exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-code-editor\").length) {\n                    $(document).trigger(\"dht_aceEditorAjaxComplete\");\n                }\n                //if datepicker exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-datepicker\").length) {\n                    $(document).trigger(\"dht_datePickerAjaxComplete\");\n                }\n                //if datetimepicker exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-datetimepicker\").length) {\n                    $(document).trigger(\"dht_dateTimePickerAjaxComplete\");\n                }\n                //if timepicker exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-timepicker\").length) {\n                    $(document).trigger(\"dht_timePickerAjaxComplete\");\n                }\n                //if rangeslider exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-rangeslider\").length) {\n                    $(document).trigger(\"dht_rangeSliderAjaxComplete\");\n                }\n                //if multioptions exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-multioptions\").length) {\n                    $(document).trigger(\"dht_multiOptionsAjaxComplete\");\n                }\n                //if upload exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-upload-item\").length) {\n                    $(document).trigger(\"dht_uploadAjaxComplete\");\n                }\n                //if upload image exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-upload-image\").length) {\n                    $(document).trigger(\"dht_uploadImageAjaxComplete\");\n                }\n                //if upload gallery exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-upload-gallery\").length) {\n                    $(document).trigger(\"dht_uploadGalleryAjaxComplete\");\n                }\n                //if typography exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-typography\").length) {\n                    $(document).trigger(\"dht_typographyAjaxComplete\");\n                }\n                //if switch exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-switch\").length) {\n                    $(document).trigger(\"dht_switchtAjaxComplete\");\n                }\n                //if radio image exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-image-select\").length) {\n                    $(document).trigger(\"dht_radioImageAjaxComplete\");\n                }\n                //if multiinput exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-multiinput\").length) {\n                    $(document).trigger(\"dht_multiInputAjaxComplete\");\n                }\n                //if icon exists in the current content, reload its js code\n                if ($content.find(\".dht-field-child-icons\").length) {\n                    $(document).trigger(\"dht_iconAjaxComplete\");\n                }\n            }\n\n            this._reinitializeWPEditor($content);\n        }\n\n        /**\n         * reinitialize options loaded via ajax\n         *\n         * @return void\n         */\n        private _reinitializeWPEditor($content: JQuery<HTMLElement>) {\n            //reinitialize the wp editor option\n            $content.find(\"textarea.wp-editor-area\").each(function() {\n                if (typeof wp === \"undefined\" || typeof wp.editor === \"undefined\") return;\n\n                //get editor if\n                const id = $(this).attr(\"id\")!;\n\n                if (typeof wp.editor !== \"undefined\" && typeof id !== \"undefined\") {\n                    wp.editor.remove(id);\n                    wp.editor.initialize(id, {\n                        tinymce: {\n                            wpautop: true,\n                            plugins:\n                                \"charmap colorpicker compat3x directionality fullscreen hr image lists media paste tabfocus textcolor wordpress wpautoresize wpdialogs wpeditimage wpemoji wpgallery wplink wptextpattern wpview\",\n                            toolbar1: \"formatselect bold italic bullist numlist blockquote alignleft aligncenter alignright link wp_more wp_adv\",\n                            toolbar2: \"strikethrough hr forecolor pastetext removeformat charmap outdent indent undo redo wp_help\",\n                        },\n                        quicktags: {\n                            id: id,\n                            buttons: \"strong,em,link,block,del,ins,img,ul,ol,li,code,more,close\",\n                        },\n                        mediaButtons: true,\n                    });\n                }\n            });\n        }\n    }\n\n    //init each accordion group\n    $(\".dht-field-wrapper .dht-field-child-addable-box\").each(function() {\n        new AddableBox($(this));\n    });\n})(jQuery);\n"],"names":["$","$addable_box","this","$_addable_box","_initAddableBox","_addBoxItem","_removeBoxItem","_openCloseBoxItem","_changeBoxTitleOnKeyUp","_enableSortableBoxes","$thisClass","on","e","preventDefault","$add_button","$box_items","siblings","_maxBoxItems","addClass","$prev_box_item","children","$box_item","clone","attr","$box_content_area","box_item_title","removeClass","empty","hide","$box_title_text","text","_ajaxLoadOptions","parents","$main_parent","length","remove","confirm","$current_box_title","hasClass","$current_box_item","parent","_boxItemsManipulations","value","val","sortable","containment","forcePlaceholderSize","handle","placeholder","ajax","url","dht_framework_ajax_info","ajax_url","type","dataType","data","action","group","box_number","beforeSend","css","success","response","append","setTimeout","_reinitializeOptions","console","error","complete","$box_title","slideUp","toggleClass","next","slideToggle","$content","find","document","trigger","_reinitializeWPEditor","each","wp","editor","id","initialize","tinymce","wpautop","plugins","toolbar1","toolbar2","quicktags","buttons","mediaButtons","AddableBox"],"sourceRoot":""}