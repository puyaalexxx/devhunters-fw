{"version":3,"file":"scripts/js/extensions/options/fields/colorpicker-script.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN4B;AAE5B,CAAC,UAAU,CAAe;IACtB,YAAY,CAAC;IAEb;QAGI;YAFQ,uBAAkB,GAAG,EAAE,CAAC;YAG5B,mBAAmB;YACnB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5B,CAAC;QAED;;;;WAIG;QACK,sCAAgB,GAAxB;YACI,IAAM,UAAU,GAAG,IAAI,CAAC;YAExB,CAAC,CAAC,2CAA2C,CAAC,CAAC,IAAI,CAAC;gBAChD,IAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBAEtB,+BAA+B;gBAC/B,IAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,cAAc,CAAE,CAAC;gBAE5C,+BAA+B;gBAC/B,IAAM,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,mCAAmC;gBAE1G,kCAAkC;gBAClC,UAAU,CAAC,0BAA0B,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;gBAEtD,mDAAmD;gBACnD,UAAU,CAAC,qBAAqB,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;QACP,CAAC;QAED;;;;WAIG;QACK,gDAA0B,GAAlC,UAAmC,YAAiB,EAAE,OAAe;YACjE,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gBACvB,IAAI,CAAC,kBAAkB,GAAG;oBACtB,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;iBAChC,CAAC;YACN,CAAC;YAED,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACxD,CAAC;QAED;;;;WAIG;QACK,2CAAqB,GAA7B,UAA8B,YAAiB,EAAE,YAAiC;YAAlF,iBAaC;YAZG,qEAAqE;YACrE,YAAY,CAAC,WAAW,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YAEvD,mDAAmD;YACnD,YAAY,CAAC,EAAE,CAAC,OAAO,EAAE;gBACrB,IAAM,KAAK,GAAG,CAAC,CAAC,KAAI,CAAC,CAAC;gBAEtB,gCAAgC;gBAChC,IAAI,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAE,CAAC;gBAE5D,YAAY,CAAC,aAAa,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;QACP,CAAC;QACL,kBAAC;IAAD,CAAC;IAED,8BAA8B;IAC9B,SAAS,IAAI;QACT,IAAI,WAAW,EAAE,CAAC;IACtB,CAAC;IAED,0BAA0B;IAC1B,CAAC,CAAC;QACE,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;IAEH,0CAA0C;IAC1C,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,6BAA6B,EAAE;QAC1C,IAAI,EAAE,CAAC;IACX,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,+CAAM,CAAC,CAAC","sources":["webpack:///external var \"jQuery\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./assets/scripts/ts/extensions/options/fields/colorpicker.ts"],"sourcesContent":["module.exports = jQuery;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import jQuery from \"jquery\";\n\n(function ($: JQueryStatic): void {\n    \"use strict\";\n\n    class ColorPicker {\n        private _wpColorPickerArgs = {};\n\n        constructor() {\n            //init colorpickers\n            this._initColorpicker();\n        }\n\n        /**\n         * init colorpickers\n         *\n         * @return void\n         */\n        private _initColorpicker() {\n            const $thisClass = this;\n\n            $(\".dht-field-child-wrapper .dht-colorpicker\").each(function () {\n                const $this = $(this);\n\n                //get default palette of colors\n                const palette = $this.attr(\"data-palette\")!;\n\n                // get default button reference\n                const $default_btn = $this.siblings(\".dht-default-color-btn\").clone(); // Clone the button for each picker\n\n                //set the default colorpicker args\n                $thisClass._setDefaultColorPickerArgs($this, palette);\n\n                //reset the color picker color to its default value\n                $thisClass._resetColoPickerValue($this, $default_btn);\n            });\n        }\n\n        /**\n         * set the default colorpicker args\n         *\n         * @return void\n         */\n        private _setDefaultColorPickerArgs($colorpicker: any, palette: string): void {\n            if (palette.length !== 0) {\n                this._wpColorPickerArgs = {\n                    palettes: JSON.parse(palette),\n                };\n            }\n\n            $colorpicker.wpColorPicker(this._wpColorPickerArgs);\n        }\n\n        /**\n         * reset the color picker color to its default value\n         *\n         * @return void\n         */\n        private _resetColoPickerValue($colorpicker: any, $default_btn: JQuery<HTMLElement>): void {\n            //default button to reset the color picker color to its default value\n            $default_btn.insertAfter($colorpicker.parent(\"label\"));\n\n            //reset the color picker color to its default value\n            $default_btn.on(\"click\", () => {\n                const $this = $(this);\n\n                //get option default color value\n                let defaultColor = $default_btn.attr(\"data-default-value\")!;\n\n                $colorpicker.wpColorPicker(\"color\", defaultColor);\n            });\n        }\n    }\n\n    //init each colorpicker option\n    function init() {\n        new ColorPicker();\n    }\n\n    // Initialize on page load\n    $(function () {\n        init();\n    });\n\n    // Initialize after AJAX content is loaded\n    $(document).on(\"dht_colorPickerAjaxComplete\", function () {\n        init();\n    });\n})(jQuery);\n"],"names":[],"sourceRoot":""}