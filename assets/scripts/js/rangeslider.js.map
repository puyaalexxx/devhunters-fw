{"version":3,"file":"scripts/js/rangeslider.js","mappings":"oIAEA,SAAUA,GAGN,iBASI,WAAYC,GAERC,KAAKC,cAAgBF,EAErBC,KAAKE,cAAgBF,KAAKC,cAAcE,KAAK,sBAC7CH,KAAKI,UAAYJ,KAAKE,cAAcG,KAAK,cACzCL,KAAKM,OAASN,KAAKE,cAAcG,KAAK,YACtCL,KAAKO,OAASP,KAAKE,cAAcG,KAAK,YACtCL,KAAKQ,eAAiBR,KAAKE,cAAcG,KAAK,eAEvB,QAAnBL,KAAKI,UACLJ,KAAKS,mBAELT,KAAKU,aAEb,CAkDJ,OA3CY,YAAAD,iBAAR,WACI,IAAME,EAAUX,KAAKE,cAAcU,SAAS,qBAAqBC,SAAS,uBACpEC,EAAUd,KAAKE,cAAcU,SAAS,qBAAqBC,SAAS,uBAEpEE,EAAyBf,KAAKQ,eAAeQ,OAAS,EAAIhB,KAAKQ,eAAeS,MAAM,KAAKC,IAAIC,QAAU,GAE7GnB,KAAKE,cAAckB,OAAO,CACtBC,OAAO,EACPC,IAAKtB,KAAKM,MACViB,IAAKvB,KAAKO,MACViB,OAAQT,EACRU,MAAO,SAASC,EAAOC,QACDC,IAAdD,EAAGH,SACHb,EAAQkB,IAAIF,EAAGH,OAAO,IACtBV,EAAQe,IAAIF,EAAGH,OAAO,IAE9B,IAGJb,EAAQkB,IAAI7B,KAAKE,cAAckB,OAAO,SAAU,IAChDN,EAAQe,IAAI7B,KAAKE,cAAckB,OAAO,SAAU,GACpD,EAOQ,YAAAV,YAAR,WACI,IAAMoB,EAAS9B,KAAKE,cAAcU,SAAS,eAE3CZ,KAAKE,cAAckB,OAAO,CACtBC,MAAO,MACPU,OAAQ/B,KAAKQ,eACbc,IAAKtB,KAAKM,MACViB,IAAKvB,KAAKO,MACVkB,MAAO,SAASC,EAAOC,GACnBG,EAAOD,IAAIF,EAAGI,MAClB,IAGJD,EAAOD,IAAI7B,KAAKE,cAAckB,OAAO,SACzC,EACJ,EA1EA,GA6EA,SAASY,IACLlC,EAAE,mDAAmDmC,MAAK,WACtD,IAAIC,EAAYpC,EAAEE,MACtB,GACJ,CAGAF,GAAE,WACEkC,GACJ,IAGAlC,EAAEqC,UAAUC,GAAG,+BAA+B,WAC1CJ,GACJ,GACH,CA/FD,C,MA+FG,G","sources":["webpack:///./assets/scripts/ts/modules/extensions/options/fields/rangeslider.ts"],"sourcesContent":["import jQuery from \"jquery\";\n\n(function($: JQueryStatic): void {\n    \"use strict\";\n\n    class RangeSlider {\n        //range slider reference\n        private $_rangeSlider;\n        private $_sliderInput;\n        private readonly $_isRange;\n        private readonly $_min: number;\n        private readonly $_max: number;\n        private readonly $_sliderValues;\n\n        constructor($rangeSlider: JQuery<HTMLElement>) {\n            //range slider reference\n            this.$_rangeSlider = $rangeSlider;\n\n            this.$_sliderInput = this.$_rangeSlider.find(\".dht-slider-slider\");\n            this.$_isRange = this.$_sliderInput.attr(\"data-range\");\n            this.$_min = +this.$_sliderInput.attr(\"data-min\")!;\n            this.$_max = +this.$_sliderInput.attr(\"data-max\")!;\n            this.$_sliderValues = this.$_sliderInput.attr(\"data-values\")!;\n\n            if (this.$_isRange === \"yes\") {\n                this._initRangeSlider();\n            } else {\n                this._initSlider();\n            }\n        }\n\n        /**\n         * init range slider\n         *\n         * @return void\n         */\n        private _initRangeSlider(): void {\n            const $input1 = this.$_sliderInput.siblings(\".dht-slider-group\").children(\".dht-range-slider-1\");\n            const $input2 = this.$_sliderInput.siblings(\".dht-slider-group\").children(\".dht-range-slider-2\");\n\n            const range_values: number[] = this.$_sliderValues.length > 0 ? this.$_sliderValues.split(\",\").map(Number) : [];\n\n            this.$_sliderInput.slider({\n                range: true,\n                min: this.$_min,\n                max: this.$_max,\n                values: range_values,\n                slide: function(event, ui) {\n                    if (ui.values !== undefined) {\n                        $input1.val(ui.values[0]!);\n                        $input2.val(ui.values[1]!);\n                    }\n                },\n            });\n\n            $input1.val(this.$_sliderInput.slider(\"values\", 0));\n            $input2.val(this.$_sliderInput.slider(\"values\", 1));\n        }\n\n        /**\n         * init slider\n         *\n         * @return void\n         */\n        private _initSlider(): void {\n            const $input = this.$_sliderInput.siblings(\".dht-slider\");\n\n            this.$_sliderInput.slider({\n                range: \"min\",\n                value: +this.$_sliderValues,\n                min: this.$_min,\n                max: this.$_max,\n                slide: function(event, ui) {\n                    $input.val(ui.value!);\n                },\n            });\n\n            $input.val(this.$_sliderInput.slider(\"value\"));\n        }\n    }\n\n    //init each range slider option\n    function init() {\n        $(\".dht-field-wrapper .dht-field-child-rangeslider\").each(function() {\n            new RangeSlider($(this));\n        });\n    }\n\n    // Initialize on page load\n    $(function() {\n        init();\n    });\n\n    // Initialize after AJAX content is loaded\n    $(document).on(\"dht_rangeSliderAjaxComplete\", function() {\n        init();\n    });\n})(jQuery);\n"],"names":["$","$rangeSlider","this","$_rangeSlider","$_sliderInput","find","$_isRange","attr","$_min","$_max","$_sliderValues","_initRangeSlider","_initSlider","$input1","siblings","children","$input2","range_values","length","split","map","Number","slider","range","min","max","values","slide","event","ui","undefined","val","$input","value","init","each","RangeSlider","document","on"],"sourceRoot":""}