{"version":3,"file":"scripts/js/upload-gallery.js","mappings":"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","sources":["webpack:///./assets/scripts/ts/modules/extensions/options/fields/upload-gallery.ts"],"sourcesContent":["import jQuery from \"jquery\";\n\n(function($: JQueryStatic): void {\n    \"use strict\";\n\n    class UploadGallery {\n        //upload gallery reference\n        private $_gallery;\n\n        constructor($gallery: JQuery<HTMLElement>) {\n            //gallery reference\n            this.$_gallery = $gallery;\n\n            //upload gallery on click\n            this._uploadGallery();\n\n            //remove image when the x icon is clicked\n            this._removeGalleryImage();\n\n            //sort images\n            this._onSortImages();\n        }\n\n        /**\n         * upload gallery\n         *\n         * @return void\n         */\n        private _uploadGallery(): void {\n            //this class reference\n            const $thisClass = this;\n\n            this.$_gallery.off(\"click\", \".dht-upload-gallery-button\").on(\"click\", \".dht-upload-gallery-button\", function() {\n                const $this = jQuery(this);\n                const $hidden_input = $this.siblings(\".dht-upload-gallery-hidden\");\n                const $media_text = $this.attr(\"data-media-text\");\n\n                //open WP media popup\n                const custom_uploader = wp.media({\n                    title: $media_text,\n                    button: {\n                        text: $media_text,\n                    },\n                    library: { type: \"image\" },\n                    multiple: true,\n                });\n\n                //do manipulations after inserting the images\n                $thisClass._onSelectImages($this, $hidden_input, custom_uploader);\n\n                custom_uploader.open();\n\n                //open the WP media popup with a preselected attachment ids if exist\n                $thisClass._preSelectImages($hidden_input, custom_uploader);\n            });\n        }\n\n        /**\n         * remove image from gallery and from the hidden input\n         *\n         * @return void\n         */\n        private _removeGalleryImage(): void {\n            //this class reference\n            const $thisClass = this;\n\n            this.$_gallery.off(\"click\", \".dht-gallery-group .dht-img-remove-icon\").on(\"click\", \".dht-gallery-group .dht-img-remove-icon\", function() {\n                //get the removed image id\n                const $hidden_input = $(this).parents(\".dht-gallery-group\").siblings(\".dht-upload-gallery-hidden\");\n                const image_id = $(this).siblings(\"img\").attr(\"data-id\")!;\n\n                //get input hidden ids\n                let $ids = $thisClass._getHiddenInputValues($hidden_input);\n                if ($ids.length > 0) {\n                    //remove id from saved ids array and add the new array to the hidden input\n                    if ($ids.indexOf(image_id) > -1) {\n                        $ids.splice($ids.indexOf(image_id), 1);\n\n                        //$hidden_input\n                        $hidden_input.val($ids.join(\",\"));\n                    }\n                }\n\n                //remove the image container\n                $(this).parent(\".dht-img-remove\").remove();\n            });\n        }\n\n        /**\n         * on select images manipulations\n         *\n         * @param $this : JQuery<HTMLElement>\n         * @param $hidden_input : JQuery<HTMLElement>\n         * @param custom_uploader : any\n         *\n         * @return void\n         */\n        private _onSelectImages($this: JQuery<HTMLElement>, $hidden_input: JQuery<HTMLElement>, custom_uploader: any) {\n            custom_uploader.off(\"select\").on(\"select\", function() {\n                let $gallery_div = $this.siblings(\".dht-gallery-group\");\n                $gallery_div.empty();\n\n                const attachments = custom_uploader.state().get(\"selection\").toJSON();\n\n                const image_ids = [];\n                let gallery = [];\n                for (let i = 0; i < attachments.length; i++) {\n                    image_ids.push(attachments[i].id);\n\n                    gallery.push({ id: attachments[i].id, url: attachments[i].url });\n                }\n                //add attachment ids to the hidden input\n                $hidden_input.val(image_ids.join(\",\"));\n\n                //insert selected images - create a gallery view\n                gallery.forEach(function(image) {\n                    $gallery_div.append(\n                        \"<span class=\\\"dht-img-remove\\\">\" +\n                        \"<span class=\\\"dht-img-remove-icon\\\"></span>\" +\n                        \"<img data-id=\\\"\" +\n                        image.id +\n                        \"\\\" src=\\\"\" +\n                        image.url +\n                        \"\\\" alt=\\\"\\\" width=\\\"100\\\" height=\\\"100\\\" />\" +\n                        \"</span>\",\n                    );\n                });\n            });\n        }\n\n        /**\n         * preselect selected images in Media popup\n         *\n         * @param $hidden_input : JQuery<HTMLElement>\n         * @param custom_uploader : any\n         *\n         * @return void\n         */\n        private _preSelectImages($hidden_input: JQuery<HTMLElement>, custom_uploader: any) {\n            let $ids = this._getHiddenInputValues($hidden_input);\n\n            if ($ids.length > 0) {\n                //set images as selected in the media popup\n                const selection = custom_uploader.state().get(\"selection\");\n                $ids.forEach(function(id: string) {\n                    let attachment = wp.media.attachment(id);\n                    attachment.fetch();\n                    selection.add(attachment ? [attachment] : []);\n                });\n            }\n        }\n\n        /**\n         * sort images\n         *\n         * @return void\n         */\n        private _onSortImages() {\n            this.$_gallery\n                .children(\".dht-gallery-group\")\n                .sortable({\n                    //  axis: \"x\", // Ensure sorting is horizontal\n                    containment: \"parent\", // Keep sorting within the parent\n                    //update hidden input ids\n                    update: function(event, ui) {\n                        let sortedIDs = $(this)\n                            .children(\".dht-img-remove\")\n                            .map(function() {\n                                return $(this).find(\"img\").attr(\"data-id\");\n                            })\n                            .get();\n\n                        $(this).siblings(\".dht-upload-gallery-hidden\").val(sortedIDs.join(\",\"));\n                    },\n                })\n                .disableSelection();\n        }\n\n        /**\n         * get hidden input values\n         *\n         * @return void\n         */\n        private _getHiddenInputValues($hidden_input: JQuery<HTMLElement>) {\n            let images_ids = String($hidden_input.val())!;\n            let images_ids_array: string[] = [];\n\n            if (images_ids.length > 0) {\n                images_ids_array = images_ids.split(\",\");\n            }\n\n            return images_ids_array;\n        }\n    }\n\n    //init each upload gallery button option\n    function init() {\n        $(\".dht-field-wrapper .dht-field-child-upload-gallery\").each(function() {\n            new UploadGallery($(this));\n        });\n    }\n\n    // Initialize on page load\n    $(function() {\n        init();\n    });\n\n    // Initialize after AJAX content is loaded\n    $(document).on(\"dht_uploadGalleryAjaxComplete\", function() {\n        init();\n    });\n})(jQuery);\n"],"names":["$","$gallery","this","$_gallery","_uploadGallery","_removeGalleryImage","_onSortImages","$thisClass","off","on","$this","$hidden_input","siblings","$media_text","attr","custom_uploader","wp","media","title","button","text","library","type","multiple","_onSelectImages","open","_preSelectImages","parents","image_id","$ids","_getHiddenInputValues","length","indexOf","splice","val","join","parent","remove","$gallery_div","empty","attachments","state","get","toJSON","image_ids","gallery","i","push","id","url","forEach","image","append","attachment","fetch","add","children","sortable","containment","update","event","ui","sortedIDs","map","find","disableSelection","images_ids","String","images_ids_array","split","init","each","UploadGallery","document"],"sourceRoot":""}