{"version":3,"file":"scripts/js/upload-image.js","mappings":"mIAEA,SAAUA,GAGN,iBAII,WAAYC,GAERC,KAAKC,cAAgBF,EAGrBC,KAAKE,eAGLF,KAAKG,qBACT,CA0FJ,OAnFY,YAAAD,aAAR,WAEI,IAAME,EAAaJ,KAEnBA,KAAKC,cAAcI,IAAI,QAAS,4BAA4BC,GAAG,QAAS,4BAA4B,WAChG,IAAMC,EAAQT,EAAEE,MACVQ,EAAgBD,EAAME,SAAS,sBAC/BC,EAAcH,EAAMI,KAAK,mBAGzBC,EAAkBC,GAAGC,MAAM,CAC7BC,MAAOL,EACPM,OAAQ,CACJC,KAAMP,GAEVQ,QAAS,CAAEC,KAAM,SACjBC,UAAU,IAGdR,EAAgBP,IAAI,UAAUC,GAAG,UAAU,WACvC,IAAMe,EAAed,EAAME,SAAS,eAEpCY,EAAaZ,SAAS,OAAOa,SAE7B,IAAMC,EAAaX,EAAgBY,QAAQC,IAAI,aAAaC,QAAQC,SAGpEN,EAAaO,IAAIL,EAAWM,KAC5BR,EAAaV,KAAK,QAASY,EAAWM,KAGtCrB,EAAcoB,IAAIL,EAAWO,IAG7BT,EAAaU,OAAO,aAAgBR,EAAWM,IAAM,uCACzD,IAEAjB,EAAgBoB,OAGhB5B,EAAW6B,iBAAiBzB,EAAeI,EAC/C,GACJ,EAOQ,YAAAT,oBAAR,WACIH,KAAKC,cAAcI,IAAI,QAAS,eAAeC,GAAG,QAAS,eAAe,WACtE,IAAMC,EAAQT,EAAEE,MAGI,KAAhBO,EAAMqB,QACNrB,EAAME,SAAS,OAAOa,SACtBf,EAAME,SAAS,sBAAsBmB,IAAI,IACzCrB,EAAMI,KAAK,QAAS,KAIpBJ,EAAMqB,MAAMM,OAAS,IACrB3B,EAAME,SAAS,OAAOa,SACtBf,EAAMwB,OAAO,aAAgBxB,EAAMqB,MAAQ,wCAC3CrB,EAAMI,KAAK,QAASJ,EAAMqB,OAElC,GACJ,EAUQ,YAAAK,iBAAR,SAAyBzB,EAAoCI,IAC9BJ,EAAcoB,MACjB,GACpBhB,EAAgBY,QAAQC,IAAI,aAAaU,IAAItB,GAAGC,MAAMS,WAAWf,EAAcoB,OAEvF,EACJ,EAvGA,GA0GA,SAASQ,IACLtC,EAAE,oDAAoDuC,MAAK,WACvD,IAAIC,EAAYxC,EAAEE,MACtB,GACJ,CAGAF,GAAE,WACEsC,GACJ,IAGAtC,EAAEyC,UAAUjC,GAAG,+BAA+B,WAC1C8B,GACJ,GACH,CA5HD,C,MA4HG,G","sources":["webpack:///./assets/scripts/ts/modules/extensions/options/fields/upload-image.ts"],"sourcesContent":["import jQuery from \"jquery\";\n\n(function($: JQueryStatic): void {\n    \"use strict\";\n\n    class UploadImage {\n        //upload gallery reference\n        private $_uploadImage;\n\n        constructor($uploadImage: JQuery<HTMLElement>) {\n            //upload image reference\n            this.$_uploadImage = $uploadImage;\n\n            //upload image on click\n            this._uploadImage();\n\n            //remove image when input is cleared\n            this._removeImageOnInput();\n        }\n\n        /**\n         * upload image\n         *\n         * @return void\n         */\n        private _uploadImage(): void {\n            //this class reference\n            const $thisClass = this;\n\n            this.$_uploadImage.off(\"click\", \".dht-upload-image-button\").on(\"click\", \".dht-upload-image-button\", function() {\n                const $this = $(this);\n                const $hidden_input = $this.siblings(\".dht-upload-hidden\");\n                const $media_text = $this.attr(\"data-media-text\");\n\n                //open WP media popup\n                const custom_uploader = wp.media({\n                    title: $media_text,\n                    button: {\n                        text: $media_text,\n                    },\n                    library: { type: \"image\" },\n                    multiple: false,\n                });\n\n                custom_uploader.off(\"select\").on(\"select\", function() {\n                    const $image_input = $this.siblings(\".dht-upload\");\n                    //remove image preview before proceeding\n                    $image_input.siblings(\"img\").remove();\n\n                    const attachment = custom_uploader.state().get(\"selection\").first().toJSON();\n\n                    //add image URL\n                    $image_input.val(attachment.url);\n                    $image_input.attr(\"value\", attachment.url);\n\n                    //add attachment ids to the hidden input\n                    $hidden_input.val(attachment.id);\n\n                    //display a preview image with the selected image url\n                    $image_input.before(\"<img src=\\\"\" + attachment.url + \"\\\" width=\\\"100\\\" height=\\\"100\\\"  alt=\\\"\\\"/>\");\n                });\n\n                custom_uploader.open();\n\n                //open the WP media popup with a preselected attachment id if exist\n                $thisClass._preSelectImages($hidden_input, custom_uploader);\n            });\n        }\n\n        /**\n         * remove image when input is cleared\n         *\n         * @return void\n         */\n        private _removeImageOnInput(): void {\n            this.$_uploadImage.off(\"input\", \".dht-upload\").on(\"input\", \".dht-upload\", function() {\n                const $this = $(this);\n\n                // Check if the input field is empty and remove the image id and URL\n                if ($this.val() === \"\") {\n                    $this.siblings(\"img\").remove();\n                    $this.siblings(\".dht-upload-hidden\").val(\"\");\n                    $this.attr(\"value\", \"\");\n                }\n\n                //change image when adding a new link\n                if ($this.val().length > 0) {\n                    $this.siblings(\"img\").remove();\n                    $this.before(\"<img src=\\\"\" + $this.val() + \"\\\" width=\\\"100\\\" height=\\\"100\\\"  alt=\\\"\\\"/>\");\n                    $this.attr(\"value\", $this.val());\n                }\n            });\n        }\n\n        /**\n         * preselect selected image in Media popup\n         *\n         * @param $hidden_input : JQuery<HTMLElement>\n         * @param custom_uploader : any\n         *\n         * @return void\n         */\n        private _preSelectImages($hidden_input: JQuery<HTMLElement>, custom_uploader: any) {\n            const $hidden_input_val = +$hidden_input.val()!;\n            if ($hidden_input_val > 0) {\n                custom_uploader.state().get(\"selection\").add(wp.media.attachment($hidden_input.val()));\n            }\n        }\n    }\n\n    //init each upload image button option\n    function init() {\n        $(\".dht-field-wrapper .dht-field-child-upload-image\").each(function() {\n            new UploadImage($(this));\n        });\n    }\n\n    // Initialize on page load\n    $(function() {\n        init();\n    });\n\n    // Initialize after AJAX content is loaded\n    $(document).on(\"dht_uploadImageAjaxComplete\", function() {\n        init();\n    });\n})(jQuery);"],"names":["$","$uploadImage","this","$_uploadImage","_uploadImage","_removeImageOnInput","$thisClass","off","on","$this","$hidden_input","siblings","$media_text","attr","custom_uploader","wp","media","title","button","text","library","type","multiple","$image_input","remove","attachment","state","get","first","toJSON","val","url","id","before","open","_preSelectImages","length","add","init","each","UploadImage","document"],"sourceRoot":""}